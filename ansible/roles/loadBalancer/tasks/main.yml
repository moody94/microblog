---
-   name: Update apt-cache and upgrade
    apt:
        force_apt_get: yes
        update_cache: "True"
        cache_valid_time: 3600
        upgrade: yes

-   name: install dependency
    apt:
        force_apt_get: yes
        name: "{{ packages }}"
        state: present

-   name: Add Docker GPG apt Key
    apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

-   name: Add docker repository to apt
    apt_repository:
        repo: deb https://download.docker.com/linux/debian/ buster stable
        state: present

-   name: install docker
    apt:
        update_cache: yes
        name: "{{item}}"
        state: latest
    loop:
        - docker-ce
        - docker-ce-cli
    notify:
        - restart docker

-   name: pip install
    pip:
        name: docker



-   name: Check if certificate already exists.
    stat:
        path: /etc/letsencrypt/live/{{ domain_name }}/cert.pem
    register: letsencrypt_cert 

-   debug: msg="{{ letsencrypt_cert.stat.exists }}"

-   name: Stop services to allow certbot to generate a cert.
    command: service nginx stop
    when: not letsencrypt_cert.stat.exists

-   name: Generate new certificate if one doesn't exist.
    shell: "certbot certonly --standalone --noninteractive --expand --agree-tos --email {{ admin_email }} -d {{ domain_name }} -d www.{{ domain_name }}"
    when: not letsencrypt_cert.stat.exists

-   name: Remove default conf
    file:
        state: absent
        path: /etc/nginx/sites-enabled/default

-   name: Copy nginx.conf.j2 from local machine to loadBalancer VM's specified path
    template:
        src: ./templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf

-   name: Copy load-balancer.conf.j2 from local machine to loadBalancer VM's specified path
    template:
        src: ./templates/load-balancer.conf.j2
        dest: /etc/nginx/sites-available/load-balancer.conf


-   name: Create symbolic link for load-balancer.conf
    file:
        state: link
        src: /etc/nginx/sites-available/load-balancer.conf
        path: /etc/nginx/sites-enabled/load-balancer.conf

-   name: ensure nginx is at the latest version
    apt: name=nginx state=latest

-   name: Start nginx
    service:
        name: nginx
        state: started
    notify:
        - restart nginx

-   name: Create nginx prometheus exporter container
    docker_container:
        name: nginx-prometheus
        image: nginx/nginx-prometheus-exporter:0.4.2
        ports:
            - "9113:9113"
        restart_policy: always
        state: started
        command: |
            -nginx.scrape-uri=https://microblogonsteroids.software/metrics
            -nginx.retries=10
            -nginx.ssl-verify=false
            -web.telemetry-path=/prometheus